---
- name: Init swarm on the first node
  community.general.docker_swarm:
    state: present
    advertise_addr: "{{ advertise_addr }}"
  register: result
  when: inventory_hostname == groups[docker_swarm_manager_group][0]

- name: Get join-token for manager nodes
  ansible.builtin.set_fact:
    join_token_manager: "{{ hostvars[groups[docker_swarm_manager_group][0]].result.swarm_facts.JoinTokens.Manager }}"

- name: Get join-token for worker nodes
  ansible.builtin.set_fact:
    join_token_worker: "{{ hostvars[groups[docker_swarm_manager_group][0]].result.swarm_facts.JoinTokens.Worker }}"

- name: Join other managers
  community.general.docker_swarm:
    state: join
    join_token: "{{ join_token_manager }}"
    advertise_addr: "{{ advertise_addr }}"
    remote_addrs: "{{ hostvars[groups[docker_swarm_manager_group][0]]['ansible_default_ipv4']['address'] }}"
  when:
    - inventory_hostname in groups[docker_swarm_manager_group]
    - inventory_hostname != groups[docker_swarm_manager_group][0]

- name: Join workers
  community.general.docker_swarm:
    state: join
    join_token: "{{ join_token_worker }}"
    advertise_addr: "{{ advertise_addr }}"
    remote_addrs: "{{ hostvars[groups[docker_swarm_manager_group][0]]['ansible_default_ipv4']['address'] }}"
  when:
    - inventory_hostname in groups[docker_swarm_worker_group]
